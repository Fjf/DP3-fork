description: >-
  Simulate visibilities for a given sky model `.`
inputs:
  type:
    type: string
    doc: Case-insensitive step type; must be 'predict' `.`
  sourcedb:
    type: string
    doc: Path of sourcedb in which a sky model is stored (the output of makesourcedb) `.` When the path ends with ``.skymodel`` or ``.txt`` DP3 expects a skymodel file as used by makesourcedb. This makes it possible to directly use a skymodel file without using makesourcedb to convert the file.  The sourcedb format is described at https://www.astron.nl/lofarwiki/doku.php?id=public:user_software:documentation:makesourcedb . In DP3 v5.3 a change was introduced to fix the projection of Gaussian sources. For backward compatibility, also the old behavior is still supported, using the key ``OrientationIsAbsolute`` in the sky model. To make sure you use the new (and most correct) behavior, add ``OrientationIsAbsolute=true`` to your sky models `.`
  sources:
    default: "[]"
    type: array
    doc: Patches to use in the predict step of the calibration `.`
  usebeammodel:
    default: false
    type: bool
    doc: Use the beam model in the predict part of the calibration `.`
  elementmodel:
    default: hamaker
    type: enum
    symbols: hamaker, lobes, oskar, oskardipole
    doc: Specifies which beam model to use `.`
  operation:
    default: replace
    type: string
    doc: Should the predicted visibilities be output as is (``replace``, default), should they be subtracted from the input visibilities (``subtract``) or added to them (``add``) `.`
  outputmodelname:
    default: "\"\""
    type: string
    doc: Name for writing the predicted visibilities in the output DPBuffer. If empty (default), write the output in the main/default visibility buffer, thereby replacing the input visibilities. Otherwise, write the output to an extra (model) data buffer in the output DPBuffer with the given name `.` 
  applycal&#46;*:
    doc: Set of options for applycal to apply to this predict. For this applycal-substep, .invert is off by default, so the predicted visibilities will be corrupted with the parmdb `.`
  beamproximitylimit:
    type: float
    doc: Same as in `ApplyBeam <ApplyBeam.html>`__ step `.`
  onebeamperpatch:
    type: boolean
    doc: Same as in `ApplyBeam <ApplyBeam.html>`__ step `.`
  usechannelfreq:
    type: boolean
    doc: Same as in `ApplyBeam <ApplyBeam.html>`__ step `.`
  beammode:
    type: enum
    symbols: array_factor, element, default
    doc: Same as in `ApplyBeam <ApplyBeam.html>`__ step `.`
  correcttimesmearing:
    type: int
    default: 1
    doc: >-
      Apply time smearing correction by upsampling the uvw values before
      predicting and averaging the predicted data afterwards.
      The value is the upsampling and averaging factor.
      A value of 0 or 1 disables time smearing.
  correctfreqsmearing:
    type: boolean
    doc: Simulate frequency smearing based on the channel width, by multiplying the visibility with a sinc function `.`
    default: false
  parallelbaselines:
    type: boolean
    doc: Parallelize sky model prediction over baselines instead of sources. Will speed up performance in certain cases `.`
    default: false
