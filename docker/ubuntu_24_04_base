FROM ubuntu:24.04

# Needs to be bumped before next DP3 release.
ENV EVERYBEAM_VERSION=v0.7.0
ENV IDG_VERSION=1.2.0
ENV AOFLAGGER_VERSION=v3.4.0

RUN export DEBIAN_FRONTEND="noninteractive" && \
	apt-get update && \
	apt-get install -y \
	bison \
	build-essential \
	clang-format-14 \
	cmake \
	doxygen \
	flex \
	g++ \
	gcovr \
	gfortran \
	git \
	libarmadillo-dev \
	libboost-date-time-dev \
	libboost-filesystem-dev \
	libboost-program-options-dev \
	libboost-python-dev \
	libboost-system-dev \
	libboost-test-dev \
	libgsl-dev \
	libcfitsio-dev \
	libfftw3-dev \
	libgtkmm-3.0-dev \
	libhdf5-serial-dev \
	libncurses-dev \
	liblua5.3-dev \
	liblapack-dev \
	libpng-dev \
	libpython3-dev \
	libreadline-dev \
	ninja-build \
	pkg-config \
	pybind11-dev \
	python3-dev \
	python3-h5py \
	python3-numpy \
	python3-pip \
	python3-pytest \
	python3-sphinx \
	python3-sphinx-rtd-theme \
	wcslib-dev \
	wget \
	&& \
	rm -rf /var/lib/apt/lists/*
# Install WSRT Measures (extra casacore data, for integration tests)
# Note: The file on the ftp site is updated daily. When warnings regarding leap
# seconds appear, ignore them or regenerate the docker image.
RUN mkdir -p /usr/share/casacore/data && \
    ln -s /usr/share/casacore /var/lib/casacore && \
    wget -qO - ftp://ftp.astron.nl/outgoing/Measures/WSRT_Measures.ztar | \
        tar -C /usr/share/casacore/data -xzf -
# The casacore version in Ubuntu is too old to support C++20, so install a more recent one.
RUN  mkdir /external && \
  cd /external && \
  git clone https://github.com/casacore/casacore.git && \
  cd /external/casacore && \
  git checkout v3.6.0 && \
  mkdir build && \
  cd build && \
  cmake .. -DBUILD_PYTHON=OFF -DBUILD_TESTING=OFF -DDATA_DIR=/usr/share/casacore/data && \
  make -j`nproc` && \
  make install -j`nproc` && \
  cd /external && \
  rm -rf /external/casacore
# Build aoflagger3
RUN mkdir /aoflagger && cd /aoflagger \
	&& git clone https://gitlab.com/aroffringa/aoflagger.git src \
	&& ( cd src/ && git checkout ${AOFLAGGER_VERSION} ) \
	&& mkdir build && cd build \
	&& cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr ../src \
	&& ninja install \
	&& cd / && rm -rf aoflagger
# Build IDG
# (PORTABLE: it may run on a different node than where it was compiled)
RUN mkdir /idg && cd /idg \
	&& git clone https://git.astron.nl/RD/idg.git src \
	&& ( cd src/ && git checkout ${IDG_VERSION} ) \
	&& mkdir build && cd build \
	&& cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr -DPORTABLE=ON ../src \
	&& ninja install \
	&& cd / && rm -rf idg
# Build EveryBeam
RUN mkdir /everybeam && cd /everybeam \
	&& git clone https://git.astron.nl/RD/EveryBeam.git src \
	&& ( cd src/ && git checkout ${EVERYBEAM_VERSION} ) \
	&& mkdir build && cd build \
	&& cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr ../src \
	&& ninja install \
	&& cd / && rm -rf everybeam
